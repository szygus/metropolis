function Grid(e,t){this.size=e,this.cells=t?this.fromState(t):this.empty()}Grid.prototype.empty=function(){for(var e=[],t=0;t<this.size;t++)for(var i=e[t]=[],n=0;n<this.size;n++)i.push(null);return e},Grid.prototype.fromState=function(e){for(var t=[],i=0;i<this.size;i++)for(var n=t[i]=[],r=0;r<this.size;r++){var a=e[i][r];n.push(a?new Tile(a.position,a.value):null)}return t},Grid.prototype.randomAvailableCell=function(){var e=this.availableCells();return e.length?e[Math.floor(Math.random()*e.length)]:void 0},Grid.prototype.availableCells=function(){var e=[];return this.eachCell(function(t,i,n){n||e.push({x:t,y:i})}),e},Grid.prototype.eachCell=function(e){for(var t=0;t<this.size;t++)for(var i=0;i<this.size;i++)e(t,i,this.cells[t][i])},Grid.prototype.cellsAvailable=function(){return!!this.availableCells().length},Grid.prototype.cellAvailable=function(e){return!this.cellOccupied(e)},Grid.prototype.cellOccupied=function(e){return!!this.cellContent(e)},Grid.prototype.cellContent=function(e){return this.withinBounds(e)?this.cells[e.x][e.y]:null},Grid.prototype.insertTile=function(e){this.cells[e.x][e.y]=e},Grid.prototype.removeTile=function(e){this.cells[e.x][e.y]=null},Grid.prototype.withinBounds=function(e){return e.x>=0&&e.x<this.size&&e.y>=0&&e.y<this.size},Grid.prototype.serialize=function(){for(var e=[],t=0;t<this.size;t++)for(var i=e[t]=[],n=0;n<this.size;n++)i.push(this.cells[t][n]?this.cells[t][n].serialize():null);return{size:this.size,cells:e}};